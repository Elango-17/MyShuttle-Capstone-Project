{
	"info": {
		"_postman_id": "cf9e3d15-de07-4cb8-890a-0b78ec06f76b",
		"name": "MyShuttle API test",
		"description": "Mockable API for MyShuttle (Auth, Users, Fares). Import this, then create a Postman Mock Server from it and set {{base_url}} to the mock URL.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "47555747",
		"_collection_link": "https://gayathrithalapathi-6027885.postman.co/workspace/MyShuttle_API_Tests~4a33ed25-e010-46f5-8672-e67f81c204cc/collection/47555747-cf9e3d15-de07-4cb8-890a-0b78ec06f76b?action=share&source=collection_link&creator=47555747"
	},
	"item": [
		{
			"name": "A. Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
									"const data = pm.response.json();",
									"pm.test('Token present', function () { pm.expect(data.token).to.be.a('string'); });",
									"pm.environment.set('auth_token', data.token);"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": [
						{
							"name": "200 OK - login success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"mock-jwt-token-12345\",\n  \"user\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"role\": \"admin\"\n  }\n}"
						},
						{
							"name": "401 Unauthorized - bad credentials",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"password123\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"login"
									]
								}
							},
							"status": "Error",
							"code": 401,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"error\": \"Invalid username or password\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status is 200', function () { pm.response.to.have.status(200); });",
									"pm.environment.unset('auth_token');"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							}
						],
						"url": {
							"raw": "{{base_url}}/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "200 OK - logout",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									}
								],
								"url": {
									"raw": "{{base_url}}/logout",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"Logged out\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "B. Users / Employees",
			"item": [
				{
					"name": "All users",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('Array of users', () => pm.expect(pm.response.json()).to.be.an('array'));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "200 OK - list users",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"email\": \"admin@myshuttle.com\",\n    \"role\": \"admin\"\n  },\n  {\n    \"id\": 2,\n    \"username\": \"jane.doe\",\n    \"email\": \"jane.doe@myshuttle.com\",\n    \"role\": \"employee\"\n  }\n]"
						}
					]
				},
				{
					"name": "UserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));",
									"pm.test('User has id', () => pm.expect(pm.response.json().id).to.exist);"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "1"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK - get user",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"email\": \"admin@myshuttle.com\",\n  \"role\": \"admin\"\n}"
						}
					]
				},
				{
					"name": "CreateUsers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status 201', () => pm.response.to.have.status(201));",
									"pm.test('Created user has id', () => pm.expect(pm.response.json().id).to.be.a('number'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"Gayathri\",\n  \"email\": \"Gayathri@myshuttle.com\",\n  \"role\": \"employee\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "201 Created - user",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"new.user\",\n  \"email\": \"new.user@myshuttle.com\",\n  \"role\": \"employee\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users"
									]
								}
							},
							"status": "OK",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 3,\n  \"username\": \"Gayathri\",\n  \"email\": \"Gayathri@myshuttle.com\",\n  \"role\": \"employee\"\n}"
						}
					]
				},
				{
					"name": "UpdateUser_Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"updated@myshuttle.com\",\n  \"role\": \"employee\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "2"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK - updated user",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"updated@myshuttle.com\",\n  \"role\": \"employee\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/users/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "2"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 2,\n  \"username\": \"jane.doe\",\n  \"email\": \"updated@myshuttle.com\",\n  \"role\": \"employee\"\n}"
						}
					]
				},
				{
					"name": "Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 204', () => pm.response.to.have.status(204));"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": [
						{
							"name": "204 No Content - deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/users/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "3"
										}
									]
								}
							},
							"status": "OK",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "C. Fares / Rides",
			"item": [
				{
					"name": "FareDetails",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test('Status 200', () => pm.response.to.have.status(200));"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/fares",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fares"
							]
						}
					},
					"response": [
						{
							"name": "200 OK - list fares",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/fares",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"fares"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 101,\n    \"userId\": 2,\n    \"pickup\": \"Airport\",\n    \"drop\": \"Downtown\",\n    \"price\": 45.5,\n    \"status\": \"completed\",\n    \"rating\": 5\n  },\n  {\n    \"id\": 102,\n    \"userId\": 2,\n    \"pickup\": \"Office\",\n    \"drop\": \"Home\",\n    \"price\": 18.0,\n    \"status\": \"completed\",\n    \"rating\": 4\n  }\n]"
						}
					]
				},
				{
					"name": "FaresByid",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/fares/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fares",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "101"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK - get fare",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/fares/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"fares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "101"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 101,\n  \"userId\": 2,\n  \"pickup\": \"Airport\",\n  \"drop\": \"Downtown\",\n  \"price\": 45.5,\n  \"status\": \"completed\",\n  \"rating\": 5\n}"
						}
					]
				},
				{
					"name": "CreateFares",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": 2,\n  \"pickup\": \"Station\",\n  \"drop\": \"Office\",\n  \"price\": 25.0\n}"
						},
						"url": {
							"raw": "{{base_url}}/fares",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fares"
							]
						}
					},
					"response": [
						{
							"name": "201 Created - fare",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"userId\": 2,\n  \"pickup\": \"Station\",\n  \"drop\": \"Office\",\n  \"price\": 25.0\n}"
								},
								"url": {
									"raw": "{{base_url}}/fares",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"fares"
									]
								}
							},
							"status": "OK",
							"code": 201,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 103,\n  \"userId\": 2,\n  \"pickup\": \"Station\",\n  \"drop\": \"Office\",\n  \"price\": 25.0,\n  \"status\": \"scheduled\"\n}"
						}
					]
				},
				{
					"name": "Update fares/:id",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							},
							{
								"key": "x-mock-match-request-body",
								"value": "true"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"completed\",\n  \"rating\": 5\n}"
						},
						"url": {
							"raw": "{{base_url}}/fares/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fares",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "103"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK - update fare",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									},
									{
										"key": "x-mock-match-request-body",
										"value": "true"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"status\": \"completed\",\n  \"rating\": 5\n}"
								},
								"url": {
									"raw": "{{base_url}}/fares/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"fares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "103"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": 103,\n  \"userId\": 2,\n  \"pickup\": \"Station\",\n  \"drop\": \"Office\",\n  \"price\": 25.0,\n  \"status\": \"completed\",\n  \"rating\": 5\n}"
						}
					]
				},
				{
					"name": "DELETE /fares/:id",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/fares/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"fares",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "103"
								}
							]
						}
					},
					"response": [
						{
							"name": "204 No Content - deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}"
									}
								],
								"url": {
									"raw": "{{base_url}}/fares/:id",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"fares",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "103"
										}
									]
								}
							},
							"status": "OK",
							"code": 204,
							"_postman_previewlanguage": "Text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "README - How to use this collection",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				},
				"description": "1) Import this collection.\n2) Create a Mock Server in Postman and link this collection.\n3) Copy the mock URL and set environment variable {{base_url}} to that URL.\n4) Hit POST /login first; it will set {{auth_token}}.\n5) Then try Users and Fares endpoints."
			},
			"response": [
				{
					"name": "200 OK - health",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"status\": \"mock-ok\"\n}"
				}
			]
		}
	]
}